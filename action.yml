name: 'Project context'
description: 'Build project context and synchronize project version'
branding:
  icon: 'activity'  
  color: 'green'
inputs:
  defaultBranch:
    description: 'Project default branch'
    required: false
    default: 'main'
  tagPrefix:
    description: 'Git Tag Prefix'
    required: false
    default: 'v'
  releaseBranchPrefix:
    description: 'Git Release Branch Prefix'
    required: false
    default: 'release/'
  mergedReleaseMsgRegex:
    description: 'Merged release message regex'
    required: false
    default: '^Merge pull request #[0-9]+ from .+/release/.+$'
  patterns:
    description: 'Project patterns to search/replace version. Format: <glob_pattern_with_ext>::<version_regex>::<regex_group>'
    required: false
    default: |
      pyproject.toml::(version\s?=\s?)(")([^"]+)(")::2
      package?(-lock).json::("version"\s?:\s?)(")([^"]+)(")::2
      @(gradle|maven|pom|project).properties::(version\s?=\s?)(.+)::1
      @(application|version).yml::(version:\s)(.+)::1
      @(VERSION|version)?(.txt)::.+::0
  allowCommit:
    description: 'CI: Allow git commit to fix version if not match'
    required: false
    default: 'true'
  allowTag:
    description: 'CI: Allow git tag if merged release branch'
    required: false
    default: 'true'
  userName:
    description: 'CI: Username to commit. Skip if any config visible in Runner git config'
    required: false
    default: 'ci-bot'
  userEmail:
    description: 'CI: User email to commit. Skip if any config visible in Runner git config'
    required: false
    default: 'actions@github.com'
  mustSign:
    description: 'CI: Required GPG sign when git commit/tag'
    required: false
    default: 'false'
  prefixCiMsg:
    description: 'CI: Prefix bot message'
    required: false
    default: <ci-auto-commit>
  correctVerMsg:
    description: 'CI: Correct version message template'
    required: false
    default: Correct version
  releaseVerMsg:
    description: 'CI: Release version message template'
    required: false
    default: Release version
  dry:
    description: 'CI: Dry run. If `true`, action will run without do modify files or git commit/tag'
    required: false
    default: 'true'
outputs:
  branch:
    description: 'Current branch name or tag name'
  onDefaultBranch:
    description: 'Check whether current event is on default branch or not'
  isPR:
    description: 'Check whether current event is on pull request or not'
  isReleasePR:
    description: 'Check whether current event is on release pull request or not'
  isMerged:
    description: 'Check whether current event is merged PR'
  isClosed:
    description: 'Check whether current event is close PR but not merged into target branch'
  isAfterMergedReleasePR:
    description: 'Check whether current event is a merged commit after merged release pull request into default branch or not'
  isTag:
    description: 'Check whether current event is on ref tag'
  commitMsg:
    description: 'The latest commit message'
  commitId:
    description: 'The latest commit id'
  version:
    description: 'Current tag version or release version. Null if not tag or release pull request'
  ci_mustFixVersion:
    description: 'CI: Need to fix version to match with release name'
  ci_needTag:
    description: 'CI: Need to tag new version if release branch is merged'
  ci_isPushed:
    description: 'CI: Check whether if auto commit is pushed to remote'
  ci_commitId:
    description: 'CI: auto commit id'
  ci_commitMsg:
    description: 'CI: auto commit message'
  decision_shouldBuild:
    description: |
      Should run the next step: such as build & test
      Default value is: `!ci.isPushed && !isClosed`
  decision_shouldPublish:
    description: |
      Should publish artifact: such as push artifact to any registry: npm, docker, maven, pypi..
      Default value is: `decision.build && (isOnMaster || isTag)`
  ver_current:
    description: 'Current version in config file'
  ver_nextMajor:
    description: 'Suggest next major version if after release and ver_current is compatible with semver'
  ver_nextMinor:
    description: 'Suggest next minor version if after release and ver_current is compatible with semver'
  ver_nextPatch:
    description: 'Suggest next patch version if after release and ver_current is compatible with semver'
runs:
  using: 'node12'
  main: 'dist/index.js'
